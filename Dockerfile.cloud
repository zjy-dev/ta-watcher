# Cloud-optimized Dockerfile for single-run mode
# Optimized for Railway.app, Fly.io, and other cloud platforms
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -o bin/ta-watcher \
    ./cmd/watcher

# Runtime stage - use minimal distroless image
FROM gcr.io/distroless/static-debian11

# Copy ca-certificates for HTTPS requests
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy timezone data
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Copy the binary
COPY --from=builder /app/bin/ta-watcher /ta-watcher

# Copy config template (will be overridden by env vars)
COPY --from=builder /app/config.example.yaml /config.yaml

# Set environment variables for cloud deployment
ENV TZ=UTC
ENV CONFIG_PATH=/config.yaml

# Health check for cloud platforms
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/ta-watcher", "--health"]

# Use single-run mode by default for cloud functions/cron jobs
ENTRYPOINT ["/ta-watcher"]
CMD ["--single-run", "--config", "/config.yaml"]
